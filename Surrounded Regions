def solve(board):
    if not board or not board[0]:
        return
    m, n = len(board), len(board[0])

    def dfs(i, j):
        if i<0 or j<0 or i>=m or j>=n or board[i][j] != 'O':
            return
        board[i][j] = 'B'
        dfs(i+1,j)
        dfs(i-1,j)
        dfs(i,j+1)
        dfs(i,j-1)

    for i in range(m):
        dfs(i,0)
        dfs(i,n-1)

    for j in range(n):
        dfs(j,0)
        dfs(m-1,j)

    for i in range(m):
        for j in range(n):
            if board[i][j] == 'O':
                board[i][j] = 'X'
            elif board[i][j] == 'B':
                board[i][j] = 'O'

    print(board)

solve([["X","X","X","X"],["X","O","O","X"],["X","X","O","X"],["X","O","X","X"]])